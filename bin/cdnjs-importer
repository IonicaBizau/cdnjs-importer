#!/usr/bin/env node

// Dependencies
var CdnJsImporter = require("../lib")
  , Ul = require("ul")
  , Path = require("path")
  , Logger = require("bug-killer")
  , IsThere = require("is-there")
  , Clp = require("clp")
  , Package = require("../package")
  ;

// Parse the command line arguments
var gitUrlOpt = new Clp.Option(["g", "git-url"], "Your library git url.", "git-url")
  , pathOpt = new Clp.Option(["p", "path"], "The path to your cdnjs local repository.", "path", Path.join(Ul.home(), "cdnjs"))
  , parser = new Clp({
        name: "CDNJS Importer"
      , version: Package.version
      , exe: Package.name
      , examples: [
            "cdnjs-importer -g git@github.com:IonicaBizau/gh.js.git # adds gh.js to cdnjs"
          , "cdnjs-importer -g ... -p path/to/cdnjs"
        ]
      , docs_url: Package.homepage
      , notes: "The default cdnjs repository location is in ~/cdnjs"
      , process: true
    }, [
        gitUrlOpt
      , pathOpt
    ])
  ;

// Invalid git url
if (!gitUrlOpt.value) {
    return console.log(parser.displayHelp());
}

// Resolve the path to the cdnjs repo
if (pathOpt.is_provided) {
    pathOpt.value = Path.resolve(pathOpt.value.replace("~", Ul.home()));
}

// Check if the repository exists and display friendly messages
if (!IsThere(pathOpt.value)) {
    Logger.log("Couldn't find the CDNJS repository in this path: " + CDNJS_ROOT, "error");
    Logger.log("Use `git clone git@github.com:cdnjs/cdnjs.git ~/cdnjs` to clone it.", "info");
    Logger.log("If you already cloned it in another location, please provide the path to that location using `cdnjs-importer -p path/to/cdnjs`", "info");
    return;
}

// Import the repositories
var importer = CdnJsImporter({
    cdnjs: pathOpt.value
  , debug: true
  , libs: [
        gitUrlOpt.value
    ]
}, function (err) {
    if (err) { return Logger.log(err, "error"); }
    Logger.log("Successfully done. Now you have to push your changes on GitHub and raise a pull request.");
});
